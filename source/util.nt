import {
  core.either {to-option},
  core.file.descriptor {stdin},
  this.parser {parser, run},
  this.state {new-state},
}

inline _lift-meta<a>(f: (a) -> meta a, x: ?a): meta ?a {
  match x {
  | Left(_) =>
    box {none}
  | Right(v) =>
    box {
      Right(
        letbox tmp = f(v) in
        tmp,
      )
    }
  }
}

define read-stdin<a>(p: parser(a), buffer-size: int, nes: (a) -> meta a): ?a {
  try content = to-option(core.text.io.read(stdin, buffer-size)) in
  let input-text = new-state(content) in
  letbox-T input-or-none on input-text = _lift-meta(nes, to-option(run(p, input-text))) in
  let _ = input-text in
  input-or-none
}

import {
  core.control {loop},
  this.move.make-zonk-kit {make-zonk-kit},
  this.move.parse {branch, chunk, label, not-followed-by, zonk},
}

define _try-parse(p: zonk(unit)): unit {
  pin k = make-zonk-kit(*"abcnああhehoge \n\r  hehehetest") in
  match p(k) {
  | Left(_) =>
    Unit
  | Right(_) =>
    Unit
  }
}

define _bench(): unit {
  let whatnot =
    branch(
      not-followed-by("aoeu", chunk("nああ")),
      branch(
        branch(chunk("k"), label("whatever", function (k) {
          try _ = chunk("px")(k) in
          try _ = chunk("kgあ")(k) in
          Right(Unit)
        })),
        branch(
          not-followed-by("my label", chunk("nあ")),
          branch(
            label("whatever 2", function (k) {
              try _ = chunk("pt")(k) in
              try _ = chunk("あhebc")(k) in
              Right(Unit)
            }),
            branch(
              function (k) {
                try _ = chunk("pt")(k) in
                try _ = chunk("あhebc")(k) in
                Right(Unit)
              },
              branch(
                chunk("abc"),
                branch(
                  chunk("{}"),
                  chunk("tn"),
                ),
              ),
            ),
          ),
        ),
      ),
    )
  in
  let my-parser: zonk(unit) =
    function (k) {
      try _ = chunk("abc")(k) in
      try _ = whatnot(k) in
      Right(Unit)
    }
  in
  loop(1000000, function (_) {
    _try-parse(my-parser)
  })
}

define zen(): unit {
  _bench()
}

define main(): unit {
  _bench()
}
